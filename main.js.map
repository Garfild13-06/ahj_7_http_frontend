{"version":3,"file":"main.js","mappings":"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","sources":["webpack://ajs/./src/js/app.js","webpack://ajs/webpack/bootstrap","webpack://ajs/webpack/runtime/compat get default export","webpack://ajs/webpack/runtime/define property getters","webpack://ajs/webpack/runtime/hasOwnProperty shorthand"],"sourcesContent":["const API_URL = 'http://localhost:7070'; // Backend URL\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const ticketList = document.querySelector('.ticket-list');\n  const addTicketBtn = document.getElementById('add-ticket-btn');\n  const ticketModal = document.getElementById('ticket-modal');\n  const modalTitle = document.getElementById('modal-title');\n  const ticketForm = document.getElementById('ticket-form');\n  const ticketTitleField = document.getElementById('ticket-title');\n  const ticketDescriptionField = document.getElementById('ticket-description');\n  const cancelModalBtn = document.querySelector('.cancel-btn');\n  const deleteModal = document.getElementById('delete-modal');\n  const cancelDeleteBtn = deleteModal.querySelector('.cancel');\n  const confirmDeleteBtn = deleteModal.querySelector('.delete');\n\n  let currentTicketId = null;\n  let ticketToDelete = null;\n\n  // Render a single ticket\n  function renderTicket(ticket) {\n    const li = document.createElement('li');\n    li.className = `ticket ${ticket.status ? 'completed' : ''}`; // Статус через boolean\n    li.dataset.id = ticket.id;\n    li.innerHTML = `\n      <div class=\"title-row\">\n        <div class=\"left-section\">\n          <input type=\"checkbox\" ${ticket.status ? 'checked' : ''} data-id=\"${ticket.id}\" class=\"toggle-status\">\n          <span class=\"title\" data-id=\"${ticket.id}\">${ticket.title}</span>\n        </div>\n        <div class=\"right-section\">\n          <span>${new Date(ticket.createdAt).toLocaleString()}</span>\n          <div class=\"actions\">\n            <button data-id=\"${ticket.id}\" class=\"edit-btn\">✏️</button>\n            <button data-id=\"${ticket.id}\" class=\"delete-btn\">❌</button>\n          </div>\n        </div>\n      </div>\n      <div class=\"description\"></div>\n    `;\n    ticketList.appendChild(li);\n  }\n\n  // Load tickets\n  async function loadTickets() {\n    const response = await fetch(`${API_URL}/?method=allTickets`);\n    const tickets = await response.json();\n    ticketList.innerHTML = '';\n    tickets.forEach((ticket) => renderTicket(ticket));\n  }\n\n  // Fetch full ticket details by ID\n  async function fetchTicketDetails(id) {\n    const response = await fetch(`${API_URL}/?method=ticketById&id=${id}`);\n    // eslint-disable-next-line no-return-await\n    return await response.json();\n  }\n\n  // Update a single ticket in the DOM\n  async function updateTicketInDOM(id) {\n    const ticketDetails = await fetchTicketDetails(id);\n    const ticketElement = document.querySelector(`.ticket[data-id=\"${id}\"]`);\n    if (ticketElement) {\n      const wasExpanded = ticketElement.classList.contains('open');\n      ticketElement.className = `ticket ${ticketDetails.status ? 'completed' : ''}`; // Обновляем с boolean\n      ticketElement.innerHTML = `\n        <div class=\"title-row\">\n          <div class=\"left-section\">\n            <input type=\"checkbox\" ${ticketDetails.status ? 'checked' : ''} data-id=\"${id}\" class=\"toggle-status\">\n            <span class=\"title\" data-id=\"${id}\">${ticketDetails.title}</span>\n          </div>\n          <div class=\"right-section\">\n            <span>${new Date(ticketDetails.createdAt).toLocaleString()}</span>\n            <div class=\"actions\">\n              <button data-id=\"${id}\" class=\"edit-btn\">✏️</button>\n              <button data-id=\"${id}\" class=\"delete-btn\">❌</button>\n            </div>\n          </div>\n        </div>\n        <div class=\"description\">${wasExpanded ? ticketDetails.description || 'Нет описания.' : ''}</div>\n      `;\n      if (wasExpanded) {\n        ticketElement.classList.add('open');\n      }\n    }\n  }\n\n  // Delete a ticket from the DOM\n  function removeTicketFromDOM(id) {\n    const ticketElement = document.querySelector(`.ticket[data-id=\"${id}\"]`);\n    if (ticketElement) {\n      ticketElement.remove();\n    }\n  }\n\n  // Toggle ticket status\n  async function toggleStatus(id, isChecked) {\n    try {\n      const status = isChecked; // Устанавливаем статус как boolean\n      await fetch(`${API_URL}/?method=editTicketStatus`, {\n        method: 'PUT',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ id, status }), // Передаём логическое значение\n      });\n      // После успешного изменения статуса обновляем тикет в DOM\n      updateTicketInDOM(id);\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.error('Failed to toggle ticket status:', error);\n    }\n  }\n\n  // Show modal for adding/editing ticket\n  function showModal(isEdit = false, ticket = {}) {\n    modalTitle.textContent = isEdit ? 'Изменить тикет' : 'Добавить тикет';\n    ticketTitleField.value = isEdit ? ticket.title : '';\n    ticketDescriptionField.value = isEdit ? ticket.description : '';\n    currentTicketId = isEdit ? ticket.id : null;\n    ticketModal.classList.add('active');\n  }\n\n  // Hide modal\n  function hideModal() {\n    ticketModal.classList.remove('active');\n  }\n\n  // Save ticket (create or edit)\n  async function saveTicket(event) {\n    event.preventDefault();\n    const title = ticketTitleField.value;\n    const description = ticketDescriptionField.value;\n\n    const method = currentTicketId ? 'editTicket' : 'createTicket';\n    const httpMethod = currentTicketId ? 'PUT' : 'POST';\n\n    const response = await fetch(`${API_URL}/?method=${method}`, {\n      method: httpMethod,\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        id: currentTicketId,\n        name: title,\n        description,\n        status: false, // Новый тикет всегда \"open\"\n      }),\n    });\n\n    const newTicket = await response.json();\n    hideModal();\n    if (currentTicketId) {\n      updateTicketInDOM(currentTicketId); // Обновляем только изменённый тикет\n    } else {\n      renderTicket(newTicket); // Добавляем новый тикет в конец списка\n    }\n  }\n\n  // Show delete confirmation modal\n  function showDeleteModal(id) {\n    ticketToDelete = id;\n    deleteModal.classList.add('active');\n  }\n\n  // Hide delete confirmation modal\n  function hideDeleteModal() {\n    ticketToDelete = null;\n    deleteModal.classList.remove('active');\n  }\n\n  // Delete ticket\n  async function deleteTicket() {\n    if (!ticketToDelete) return;\n    const response = await fetch(`${API_URL}/?method=deleteTicket&id=${ticketToDelete}`, { method: 'DELETE' });\n    if (response.ok) {\n      removeTicketFromDOM(ticketToDelete); // Удаляем тикет из DOM сразу после успешного ответа\n    }\n    hideDeleteModal();\n  }\n\n  // Expand ticket description\n  async function expandTicket(ticketElement, id) {\n    const descriptionElement = ticketElement.querySelector('.description');\n    if (!ticketElement.classList.contains('open')) {\n      const ticketDetails = await fetchTicketDetails(id);\n      descriptionElement.innerText = ticketDetails.description || 'Нет описания.';\n    }\n    ticketElement.classList.toggle('open');\n  }\n\n  // Event delegation for ticket actions\n  ticketList.addEventListener('click', async (event) => {\n    const { id } = event.target.dataset;\n    const ticketElement = event.target.closest('.ticket');\n\n    if (event.target.classList.contains('toggle-status')) {\n      toggleStatus(id, event.target.checked);\n    } else if (event.target.classList.contains('edit-btn')) {\n      const ticketDetails = await fetchTicketDetails(id);\n      showModal(true, ticketDetails);\n    } else if (event.target.classList.contains('delete-btn')) {\n      showDeleteModal(id);\n    } else if (event.target.classList.contains('title')) {\n      if (ticketElement) expandTicket(ticketElement, id);\n    }\n  });\n\n  // Show form for adding a new ticket\n  addTicketBtn.addEventListener('click', () => {\n    showModal(false);\n  });\n\n  // Form submission\n  ticketForm.addEventListener('submit', saveTicket);\n\n  // Modal actions\n  cancelModalBtn.addEventListener('click', hideModal);\n  cancelDeleteBtn.addEventListener('click', hideDeleteModal);\n  confirmDeleteBtn.addEventListener('click', deleteTicket);\n\n  // Initial load\n  loadTickets();\n});\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))"],"names":["API_URL","document","addEventListener","ticketList","querySelector","addTicketBtn","getElementById","ticketModal","modalTitle","ticketForm","ticketTitleField","ticketDescriptionField","cancelModalBtn","deleteModal","cancelDeleteBtn","confirmDeleteBtn","currentTicketId","ticketToDelete","renderTicket","ticket","li","createElement","className","status","dataset","id","innerHTML","title","Date","createdAt","toLocaleString","appendChild","async","fetchTicketDetails","response","fetch","json","updateTicketInDOM","ticketDetails","ticketElement","wasExpanded","classList","contains","description","add","showModal","isEdit","arguments","length","undefined","textContent","value","hideModal","remove","hideDeleteModal","event","target","closest","isChecked","method","headers","body","JSON","stringify","error","console","toggleStatus","checked","showDeleteModal","descriptionElement","innerText","toggle","expandTicket","preventDefault","httpMethod","name","newTicket","ok","removeTicketFromDOM","tickets","forEach","loadTickets","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call"],"sourceRoot":""}